!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["random-pool"]=t():e["random-pool"]=t()}(self,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{RandomPool:()=>o});class o{constructor({values:e=[],dependent:t=!1,random:o=Math.random}){this.basePool=[],this.pool=[],this.weight=0,this.random=Math.random,this.dependent=!1,this.basePool=e,this.update(e),this.dependent=t,this.random=o}update(e){this.basePool=e,this.reset()}reset(){this.pool=[...this.basePool],this.weight=0;for(const[,e]of this.pool)this.weight+=e}get length(){return this.pool.length}pick(){const e=o.range(0,this.weight,this.random);let t=0;for(let o=0;o<this.pool.length;o++){const[r,n]=this.pool[o];if(t+=n,e<=t)return this.dependent&&(this.pool.splice(o,1),this.weight-=n),r}throw new RangeError("Pool is already empty")}static range(e,t,o=Math.random){return e+(t-e)*o()}static normalize(e,t){const o=null!=t?t:e.reduce(((e,[,t])=>e+t),0);for(let t=0;t<e.length;t++)e[t][1]/=o;return e}}return t})()));